version: '3.8'

networks:
  thai-model-network:
    driver: bridge

volumes:
  grafana-storage:
    driver: local
  prometheus-data:
    driver: local

services:
  # Main Thai Model API Service
  thai-model-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: application
    container_name: thai-model-api
    ports:
      - "8001:8001"
    environment:
      - CUDA_VISIBLE_DEVICES=0
      - PYTHONPATH=/app
      - HF_HOME=/app/.cache/huggingface
    volumes:
      - ./models:/app/models:ro
      - ./config:/app/config:ro
      - type: tmpfs
        target: /app/.cache
        tmpfs:
          size: 2G
    networks:
      - thai-model-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: thai-model-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./thai-model-api.nginx:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      thai-model-api:
        condition: service_healthy
    networks:
      - thai-model-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: thai-model-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - thai-model-network
    restart: unless-stopped
    depends_on:
      - thai-model-api

  # Grafana for Dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: thai-model-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=thai-model-admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - thai-model-network
    restart: unless-stopped
    depends_on:
      - prometheus

  # Redis for Caching (Optional)
  redis:
    image: redis:alpine
    container_name: thai-model-redis
    ports:
      - "6379:6379"
    volumes:
      - type: tmpfs
        target: /data
        tmpfs:
          size: 1G
    networks:
      - thai-model-network
    restart: unless-stopped
    command: redis-server --maxmemory 512mb --maxmemory-policy allkeys-lru