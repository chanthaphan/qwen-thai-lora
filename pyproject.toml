[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "thai-language-model"
version = "1.0.0"
description = "A comprehensive Thai language model package for fine-tuning, hosting, and inference"
authors = [
    {name = "Thai Model Team", email = "team@thaimodel.example.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
keywords = [
    "thai", "language-model", "nlp", "ai", "machine-learning",
    "transformers", "fastapi", "qwen", "lora", "fine-tuning"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]

dependencies = [
    "torch>=2.0.0",
    "transformers>=4.35.0",
    "peft>=0.7.0",
    "datasets>=2.14.0",
    "trl>=0.7.0",
    "accelerate>=0.24.0",
    "bitsandbytes>=0.41.0",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "gradio>=4.0.0",
    "requests>=2.31.0",
    "numpy>=1.24.0",
    "rouge-score>=0.1.2",
    "scikit-learn>=1.3.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0.0",
    "pythainlp>=4.0.0",
    "click>=8.0.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]

docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

gpu = [
    "torch[gpu]>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/username/thai-language-model"
Documentation = "https://thai-language-model.readthedocs.io/"
Repository = "https://github.com/username/thai-language-model"
Issues = "https://github.com/username/thai-language-model/issues"

[project.scripts]
thai-model = "thai_model.cli:main"
thai-model-api = "thai_model.api.fastapi_server:main"
thai-model-train = "scripts.train_model:main"
thai-model-chat = "scripts.chat_cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["thai_model*", "scripts*"]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
thai_model = ["*.yaml", "*.json", "*.txt"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["thai_model", "scripts"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["thai_model/tests", "tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "api: marks tests as API tests",
    "gpu: marks tests that require GPU",
]

# Coverage configuration
[tool.coverage.run]
source = ["thai_model"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "transformers.*",
    "peft.*",
    "datasets.*",
    "trl.*",
    "accelerate.*",
    "bitsandbytes.*",
    "gradio.*",
    "rouge_score.*",
    "sklearn.*",
    "pythainlp.*",
]
ignore_missing_imports = true